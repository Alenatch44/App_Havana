// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEditLkBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final EditText email;

  @NonNull
  public final EditText name;

  @NonNull
  public final TextView phone;

  @NonNull
  public final EditText surname;

  @NonNull
  public final TextView textLp;

  private FragmentEditLkBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnSave,
      @NonNull EditText email, @NonNull EditText name, @NonNull TextView phone,
      @NonNull EditText surname, @NonNull TextView textLp) {
    this.rootView = rootView;
    this.btnSave = btnSave;
    this.email = email;
    this.name = name;
    this.phone = phone;
    this.surname = surname;
    this.textLp = textLp;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEditLkBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEditLkBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_edit_lk, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEditLkBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_save;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.email;
      EditText email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.phone;
      TextView phone = ViewBindings.findChildViewById(rootView, id);
      if (phone == null) {
        break missingId;
      }

      id = R.id.surname;
      EditText surname = ViewBindings.findChildViewById(rootView, id);
      if (surname == null) {
        break missingId;
      }

      id = R.id.text_lp;
      TextView textLp = ViewBindings.findChildViewById(rootView, id);
      if (textLp == null) {
        break missingId;
      }

      return new FragmentEditLkBinding((ConstraintLayout) rootView, btnSave, email, name, phone,
          surname, textLp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
