// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentInsKrisKBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView imageKrisK;

  @NonNull
  public final TextView textInfo;

  @NonNull
  public final TextView textInfoKrisKIns1;

  @NonNull
  public final TextView textInfoKrisKIns2;

  @NonNull
  public final TextView textKrisKIns;

  private FragmentInsKrisKBinding(@NonNull ScrollView rootView, @NonNull ImageView imageKrisK,
      @NonNull TextView textInfo, @NonNull TextView textInfoKrisKIns1,
      @NonNull TextView textInfoKrisKIns2, @NonNull TextView textKrisKIns) {
    this.rootView = rootView;
    this.imageKrisK = imageKrisK;
    this.textInfo = textInfo;
    this.textInfoKrisKIns1 = textInfoKrisKIns1;
    this.textInfoKrisKIns2 = textInfoKrisKIns2;
    this.textKrisKIns = textKrisKIns;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentInsKrisKBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentInsKrisKBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_ins_kris_k, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentInsKrisKBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image_kris_k;
      ImageView imageKrisK = ViewBindings.findChildViewById(rootView, id);
      if (imageKrisK == null) {
        break missingId;
      }

      id = R.id.text_info;
      TextView textInfo = ViewBindings.findChildViewById(rootView, id);
      if (textInfo == null) {
        break missingId;
      }

      id = R.id.text_info_kris_k_ins_1;
      TextView textInfoKrisKIns1 = ViewBindings.findChildViewById(rootView, id);
      if (textInfoKrisKIns1 == null) {
        break missingId;
      }

      id = R.id.text_info_kris_k_ins_2;
      TextView textInfoKrisKIns2 = ViewBindings.findChildViewById(rootView, id);
      if (textInfoKrisKIns2 == null) {
        break missingId;
      }

      id = R.id.text_kris_k_ins;
      TextView textKrisKIns = ViewBindings.findChildViewById(rootView, id);
      if (textKrisKIns == null) {
        break missingId;
      }

      return new FragmentInsKrisKBinding((ScrollView) rootView, imageKrisK, textInfo,
          textInfoKrisKIns1, textInfoKrisKIns2, textKrisKIns);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
